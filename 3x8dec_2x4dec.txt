//Design Code
module dec2x4(output reg [3:0]out,input en,input [1:0]in);
  always@*
    begin
      if(en==1'b1)
        begin
          if(in==2'b00)
            begin
              out=4'b0001;
            end
          else if(in==2'b01)
            begin
              out=4'b0010;
            end
          else if(in==2'b10)
            begin
              out=4'b0100;
            end
          else if(in==2'b11)
            begin
              out=4'b1000;
            end
          else
            begin
              out=4'b0000;
            end
        end
      else
        begin
          out=4'b0000;
        end
    end
endmodule
module dec3x8(output [7:0]out, input en,input [2:0]in);
  wire en1,en0;
  dec2x4 D1(out[7:4],en1,in[1:0]);
  dec2x4 D0(out[3:0],en0,in[1:0]);
  assign en1=in[2];
  assign en0=(~(in[2]));
endmodule

//Test Bench Code
module test();
  wire [7:0]out;
  reg en;
  reg [2:0]in;
  dec3x8 DUT(out,en,in);
  initial
    begin
      integer i;
      for(i=0;i<512;i=i+1)
        begin
          {en,in}=i;
          #10;
        end
    end
  initial
    begin
      $monitor("en=%b,in=%b,out=%b",en,in,out);
    end
endmodule

